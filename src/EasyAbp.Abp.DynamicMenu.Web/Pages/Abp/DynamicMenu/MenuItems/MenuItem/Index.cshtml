@page
@using EasyAbp.Abp.DynamicMenu.Permissions
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@using EasyAbp.Abp.DynamicMenu.Web.Pages.Abp.DynamicMenu.MenuItems.MenuItem
@using EasyAbp.Abp.DynamicMenu.Localization
@using EasyAbp.Abp.DynamicMenu.Web.Menus
@model IndexModel
@inject IPageLayout PageLayout
@inject IHtmlLocalizer<DynamicMenuResource> L
@inject IAuthorizationService Authorization
@{
    var title = L["Menu:MenuItem"].Value;
    if (!Model.ParentName.IsNullOrEmpty())
    {
        title += $" - {Model.ParentName}";
    }

    PageLayout.Content.Title = title;
    PageLayout.Content.BreadCrumb.Add(L["Menu:DynamicMenu"].Value);
    PageLayout.Content.MenuItemName = DynamicMenuMenus.MenuItem;
}

@section scripts
{
    <abp-script src="/Pages/Abp/DynamicMenu/MenuItems/MenuItem/index.js" />
}
@section styles
{
    <abp-style src="/Pages/Abp/DynamicMenu/MenuItems/MenuItem/index.css"/>
}
@section content_toolbar
{
    @if (await Authorization.IsGrantedAsync(DynamicMenuPermissions.MenuItem.Create))
    {
        <abp-button id="NewMenuItemButton"
                    text="@L["CreateMenuItem"].Value"
                    icon="plus"
                    size="Small"
                    button-type="Primary" />
    }
}

<script>
    let parentName = '@Model.ParentName';
</script>

<abp-card>
    <abp-card-body>
        <abp-table striped-rows="true" id="MenuItemTable" class="nowrap"/>
    </abp-card-body>
</abp-card>